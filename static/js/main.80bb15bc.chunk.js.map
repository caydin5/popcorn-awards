{"version":3,"sources":["components/List.js","components/Navbar.js","components/Search.js","components/Nominee.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","NomineeComponent","nomineeComponent","movies","map","movie","index","className","src","Poster","alt","onClick","handleNomineesClick","Navbar","heading","Search","value","onChange","event","setSearchInput","target","placeholder","Nominee","xmlns","width","height","fill","class","viewBox","d","App","useState","setMovies","searchInput","nominees","setNominees","getRequest","a","url","fetch","response","json","responseFinal","useEffect","updatedNominees","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAmBeA,EAjBF,SAACC,GACV,IAAMC,EAAmBD,EAAME,iBAE/B,OACI,mCACKF,EAAMG,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACd,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAKH,EAAMI,OAAQC,IAAI,WAC5B,qBAAKC,QAASX,EAAMY,oBAAqBL,UAAU,2DAAnD,SACI,cAACN,EAAD,eCDTY,EARA,SAACb,GACZ,OACI,qBAAKO,UAAU,MAAf,SACI,6BAAKP,EAAMc,aCWRC,EAdA,SAACf,GACZ,OACI,qBAAKO,UAAU,eAAf,SACI,uBACIA,UAAU,eACVS,MAAQhB,EAAMgB,MAEdC,SAAU,SAACC,GAAD,OAAWlB,EAAMmB,eAAeD,EAAME,OAAOJ,QACvDK,YAAY,cCGbC,EAXC,WACZ,OACI,qCACI,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,SAASC,MAAM,oBAAoBC,QAAQ,YAA/G,SACI,sBAAMC,EAAE,oeAEZ,sBAAMtB,UAAU,OAAhB,mCCoDGuB,G,MApDH,WAEV,MAA4BC,mBAAS,IAArC,mBAAO5B,EAAP,KAAe6B,EAAf,KAEA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBd,EAApB,KAEA,EAAgCY,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,uCAAG,WAAOH,GAAP,mBAAAI,EAAA,6DAEXC,EAFW,oCAEwBL,EAFxB,6BAKMM,MAAMD,GALZ,cAKXE,EALW,gBAQWA,EAASC,OARpB,QAQXC,EARW,QAWC3B,QAEhBiB,EAAUU,EAAc3B,QAbT,2CAAH,sDAkBhB4B,qBAAU,WACRP,EAAWH,KACV,CAACA,IASJ,OAEE,sBAAK1B,UAAU,uBAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,cAAC,EAAD,CAAQO,QAAQ,mBAChB,cAAC,EAAD,CAAQmB,YAAaA,EAAad,eAAgBA,OAEpD,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,CAAMJ,OAAQA,EAAQS,oBAfT,SAACP,GAElB,IAAMuC,EAAe,sBAAOV,GAAP,CAAiB7B,IAEtC8B,EAAYS,IAW+C1C,iBAAmBoB,WCzCnEuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80bb15bc.chunk.js","sourcesContent":["import React from 'react';\n\nconst List = (props) => {\n    const NomineeComponent = props.nomineeComponent;\n        \n    return (\n        <>\n            {props.movies.map((movie, index) =>\n                <div className='poster-container d-flex justify-content-start m-3'>\n                    <img src={movie.Poster} alt='poster'></img>\n                    <div onClick={props.handleNomineesClick} className='overlay d-flex align-items-center justify-content-center'>\n                        <NomineeComponent />\n                    </div>   \n                </div>)}\n\n        </>\n    )\n}\n\nexport default List;","import React from 'react';\n\nconst Navbar = (props) => {\n    return (\n        <div className=\"col\">\n            <h1>{props.heading}</h1>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst Search = (props) => {\n    return (\n        <div className=\"col col-sm-4\">\n            <input \n                className=\"form-control\"\n                value= {props.value}\n                // Update search with each input value\n                onChange={(event) => props.setSearchInput(event.target.value)}\n                placeholder=\"Search\">\n            </input>\n        </div>\n    )\n};\n\nexport default Search;","import React from 'react';\n\nconst Nominee = () => {\n    return (\n        <>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"orange\" class=\"bi bi-trophy-fill\" viewBox=\"0 0 16 16\">\n                <path d=\"M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5c0 .538-.012 1.05-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33.076 33.076 0 0 1 2.5.5zm.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935zm10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935z\" />\n            </svg>\n            <span className='mr-2'> Add to nominees </span>\n        </>\n    )\n}\n\nexport default Nominee;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport List from './components/List.js';\nimport Navbar from './components/Navbar.js';\nimport Search from './components/Search.js';\nimport Nominee from './components/Nominee.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  // Create a state object to store search results\n  const [movies, setMovies] = useState([]);\n  // Store search value\n  const [searchInput, setSearchInput] = useState('');\n  // Store nominees value\n  const [nominees, setNominees] = useState([]);\n\n  const getRequest = async (searchInput) => {\n    // Define url using the api key\n    const url = `http://www.omdbapi.com/?s=${searchInput}&apikey=75fa15f8`;\n\n    // Use api and fetch the response\n    const response = await fetch(url);\n\n    // Convert response from HTTP to JSON format\n    const responseFinal = await response.json();\n\n    // Pass the search input only when it's not empty\n    if (responseFinal.Search) {\n      // Update search results using state\n      setMovies(responseFinal.Search);\n    }\n  }\n\n  // Call getRequest whenever the user types in search\n  useEffect(() => {\n    getRequest(searchInput);\n  }, [searchInput]);\n\n  const addNominee = (movie) => {\n    // Create a temp list with the latest nominee added\n    const updatedNominees = [...nominees, movie]\n    // Update the main list\n    setNominees(updatedNominees); \n  }\n\n  return (\n\n    <div className=\"container-fluid list\">\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <Navbar heading=\"Popcorn Awards\" />\n        <Search searchInput={searchInput} setSearchInput={setSearchInput} />\n      </div>\n      <div className=\"row\">\n        <List movies={movies} handleNomineesClick={addNominee} nomineeComponent= {Nominee}/>\n      </div>\n    </div>\n\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}